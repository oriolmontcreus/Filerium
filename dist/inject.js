(()=>{"use strict";const e=e=>`\n    background-color: ${e};\n    border: none;\n    border-radius: 12px;\n    color: white;\n    padding: 10px 20px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n`,t="\n    max-width: 240px;\n    max-height: 230px;\n    display: none;\n",n="\n    max-width: 100%;\n    max-height: 230px;\n    overflow: auto;\n    border-radius: 12px;\n    color: #fff;\n    margin: 0;\n",i="#5688C7";var a=function(e,t,n,i){return new(n||(n=Promise))((function(a,o){function l(e){try{s(i.next(e))}catch(e){o(e)}}function r(e){try{s(i.throw(e))}catch(e){o(e)}}function s(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(l,r)}s((i=i.apply(e,t||[])).next())}))};console.log("inject.js loaded"),a(void 0,void 0,void 0,(function*(){if(window.fileInputInterceptorActive)return void console.log("File input interceptor already active");window.fileInputInterceptorActive=!0,console.log("Initializing file input interceptor");let o=null;const l=yield new Promise((e=>{chrome&&chrome.runtime&&chrome.runtime.sendMessage?chrome.runtime.sendMessage({type:"GET_USER_COLOR"},(t=>{chrome.runtime.lastError?(console.error("Error retrieving user color:",chrome.runtime.lastError),e(i)):e(t.userColor)})):(console.error("chrome.runtime.sendMessage is not available"),e(i))})),r=(t,n,i)=>{const a=document.createElement("button");return a.style.cssText=e(i),a.innerHTML=t,a.onclick=n,a.onmouseover=()=>a.style.cssText+="\n    filter: brightness(0.8);\n    transform: scale(1.05);\n",a.onmouseout=()=>a.style.cssText=e(i),a},s=e=>{const t=atob(e.split(",")[1]),n=e.split(",")[0].split(":")[1].split(";")[0],i=new ArrayBuffer(t.length),a=new Uint8Array(i);for(let e=0;e<t.length;e++)a[e]=t.charCodeAt(e);return new Blob([i],{type:n})},c=e=>{switch(e){case"image/png":return"png";case"image/jpeg":return"jpg";case"image/gif":return"gif";case"text/plain":return"txt";case"text/html":return"html";case"text/csv":return"csv";case"application/json":return"json";case"image/svg+xml":return"svg";default:return"bin"}};document.addEventListener("click",(e=>{if(!window.fileInputInterceptorActive)return;const i=e.target;var d,p;i instanceof HTMLInputElement&&"file"===i.type&&(console.log("File input click intercepted:",i),e.preventDefault(),e.stopPropagation(),d=i,p=l,a(void 0,void 0,void 0,(function*(){const e=yield a(void 0,void 0,void 0,(function*(){try{const e=yield navigator.clipboard.read();console.log("clipboardItems:",e);for(const t of e)for(const e of t.types){const n=yield t.getType(e),i=new FileReader;return new Promise((t=>{i.onloadend=()=>{const n=i.result;let a=e;e.startsWith("image/")?t({success:!0,clipboardData:{fileDataUrl:n,mimeType:e,displayData:n}}):"image/svg+xml"===e||"text/plain"===e&&n.startsWith("<svg")?(a="image/svg+xml",t({success:!0,clipboardData:{fileDataUrl:`data:image/svg+xml;base64,${btoa(n)}`,mimeType:a,displayData:n}})):e.startsWith("text/")?t({success:!0,clipboardData:{fileDataUrl:n,mimeType:e,displayData:n}}):t({success:!0,clipboardData:{fileDataUrl:n,mimeType:e,displayData:"Unsupported data type"}})},e.startsWith("image/")?i.readAsDataURL(n):i.readAsText(n)}))}return{success:!0,message:"No supported data found in clipboard"}}catch(e){return console.error("Error reading clipboard:",e),{success:!1,message:e.message}}}));if(!e.success||!e.clipboardData)return console.log("No valid data found in clipboard, proceeding with default file input action."),window.fileInputInterceptorActive=!1,d.click(),void(window.fileInputInterceptorActive=!0);console.log("Creating overlay for file input:",d);const i=document.createElement("div");i.style.cssText="\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 9999;\n    user-select: none;\n";const l=document.createElement("div");l.style.cssText="\n    background-color: #252525;\n    padding: 20px;\n    text-align: center;\n    max-width: 80%;\n    max-height: 80%;\n    overflow: auto;\n    border-radius: 12px;\n    border: 3px solid #333;\n    color: #fff;\n",l.onclick=e=>e.stopPropagation();const m=()=>i.remove();i.onclick=m;const u=r('\n<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="vertical-align: middle;">\n    <circle cx="17" cy="17" r="3"/>\n    <path d="M10.7 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v4.1"/>\n    <path d="m21 21-1.5-1.5"/>\n</svg>\n',(()=>{console.log("Browse Files button clicked"),m();try{window.fileInputInterceptorActive=!1,d.click()}finally{window.fileInputInterceptorActive=!0}}),p),g=r('\n<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="vertical-align: middle;">\n    <path d="M15 2H9a1 1 0 0 0-1 1v2c0 .6.4 1 1 1h6c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1Z"/>\n    <path d="M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2M16 4h2a2 2 0 0 1 2 2v2M11 14h10"/>\n    <path d="m17 10 4 4-4 4"/>\n</svg>\n',(()=>a(void 0,void 0,void 0,(function*(){if(console.log("Paste Data button clicked"),o){let e,t=`pasted_file.${c(o.mimeType)}`;"image/svg+xml"===o.mimeType?(e=new Blob([o.displayData],{type:o.mimeType}),t="pasted_file.svg"):e=o.mimeType.startsWith("text/")?new Blob([o.displayData],{type:o.mimeType}):s(o.fileDataUrl);const n=new File([e],t,{type:o.mimeType}),i=new DataTransfer;i.items.add(n),d.files=i.files,d.dispatchEvent(new Event("change",{bubbles:!0}))}m()}))),p);g.style.display="inline-block";const y=document.createElement("div");if(y.style.cssText="\n    max-width: 100%;\n    max-height: 230px;\n    background-color: #333;\n    color: #fff;\n    padding: 10px;\n    overflow: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 12px;\n    margin-top: 10px;\n",e.clipboardData.mimeType.startsWith("image/")||e.clipboardData.fileDataUrl.startsWith("data:image/")){console.log("Displaying image preview");const n=document.createElement("img");n.style.cssText=t,n.style.display="block",n.src=e.clipboardData.fileDataUrl,y.appendChild(n)}else if("image/svg+xml"===e.clipboardData.mimeType||e.clipboardData.displayData.startsWith("<svg")){console.log("Displaying SVG preview");const n=document.createElement("div");n.innerHTML=e.clipboardData.displayData,n.style.cssText=t,n.style.display="block",y.appendChild(n)}else if(e.clipboardData.mimeType.startsWith("text/")){console.log("Displaying text preview");const t=document.createElement("pre");t.textContent=e.clipboardData.displayData,t.style.cssText=n,y.appendChild(t)}else{console.log("Unsupported data type preview");const e=document.createElement("div");e.textContent="Unsupported data type for preview",y.appendChild(e)}l.appendChild(u),l.appendChild(g),l.appendChild(y),i.appendChild(l),document.body.appendChild(i),console.log("Overlay added to the document"),o=e.clipboardData})))}),!0),window.addEventListener("message",(e=>{if(e.data&&"CLIPBOARD_CONTENTS_RESPONSE"===e.data.type){console.log("Received clipboard contents:",e.data.clipboardData),o=e.data.clipboardData;const i=document.querySelector('div[style*="position: fixed"]');if(i){const e=i.querySelector("button:nth-child(2)"),a=i.querySelector("div:nth-child(3)");if((null==o?void 0:o.mimeType.startsWith("image/"))||(null==o?void 0:o.fileDataUrl.startsWith("data:image/"))){e.style.display="inline-block";const t=document.createElement("img");t.src=o.fileDataUrl,a.innerHTML="",a.appendChild(t)}else if("image/svg+xml"===(null==o?void 0:o.mimeType)||(null==o?void 0:o.displayData.startsWith("<svg"))){e.style.display="inline-block";const n=document.createElement("div");n.innerHTML=o.displayData,n.style.cssText=t,a.innerHTML="",a.appendChild(n)}else if(null==o?void 0:o.mimeType.startsWith("text/")){e.style.display="inline-block";const t=document.createElement("pre");t.style.cssText=n,t.textContent=o.displayData,a.innerHTML="",a.appendChild(t)}else a.innerHTML="Unsupported data type"}}})),console.log("File input interceptor initialized")})).catch(console.error)})();