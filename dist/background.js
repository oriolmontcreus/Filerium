(()=>{"use strict";console.log("Background script loaded");let e=null,r=null;function t(){chrome.tabs.query({url:chrome.runtime.getURL("src/clipboard-helpers/clipboard-helper.html")},(r=>{r.length>0&&r[0].id&&chrome.tabs.remove(r[0].id,(()=>{chrome.runtime.lastError&&console.error("Failed to close the helper tab:",chrome.runtime.lastError.message)})),null!==e&&chrome.tabs.update(e,{active:!0},(()=>{chrome.runtime.lastError&&console.error("Failed to activate the origin tab:",chrome.runtime.lastError.message)}))}))}chrome.runtime.onMessage.addListener(((o,s,c)=>{var i,n;if(console.log("Background script received a message:",o),"openClipboardHelper"===o.action)return console.log("Received request to open clipboard helper"),e=null!==(n=null===(i=s.tab)||void 0===i?void 0:i.id)&&void 0!==n?n:null,r=o.frameId,chrome.windows.create({url:chrome.runtime.getURL("src/clipboard-helpers/clipboard-helper.html"),type:"popup",width:400,height:300},(e=>{chrome.runtime.lastError?(console.error("Error creating clipboard helper window:",chrome.runtime.lastError.message),c({success:!1,error:chrome.runtime.lastError.message})):e?(console.log("Clipboard helper window created with id:",e.id),c({success:!0})):(console.error("Window created, but window object is undefined"),c({success:!1,error:"Window object is undefined"}))})),!0;if(o.fileDataUrl)return null!==e&&chrome.tabs.sendMessage(e,{fileDataUrl:o.fileDataUrl,mimeType:o.mimeType,frameId:r},(e=>{chrome.runtime.lastError?console.error(`Error in sending message to content script: ${chrome.runtime.lastError.message}`):console.log("Content script response:",e),t()})),!0;if(o.closeTab)return t(),!0;if("saveSitePreference"===o.action){const{site:e,enabled:r}=o;return chrome.storage.sync.get({sitePreferences:{}},(t=>{const o=t.sitePreferences;o[e]=r,chrome.storage.sync.set({sitePreferences:o},(()=>{c({success:!0})}))})),!0}if("getSitePreference"===o.action){const{site:e}=o;return chrome.storage.sync.get({sitePreferences:{}},(r=>{const t=r.sitePreferences;c({enabled:t[e]})})),!0}})),chrome.tabs.onUpdated.addListener(((e,r,t)=>{"complete"===r.status&&t.url&&t.url.startsWith("http")&&chrome.scripting.executeScript({target:{tabId:e},files:["dist/inject.js"]}).then((()=>{console.log("Inject script injected into tab",e)})).catch((e=>{console.error("Error injecting script:",e)}))}))})();