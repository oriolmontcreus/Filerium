(()=>{"use strict";({481:function(){var e=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(a,i){function c(e){try{s(o.next(e))}catch(e){i(e)}}function r(e){try{s(o.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(c,r)}s((o=o.apply(e,t||[])).next())}))};console.log("Content script loaded"),function(){if(document.querySelector('script[data-injected="true"]'))console.log("Inject script already present");else{const e=document.createElement("script");e.src=chrome.runtime.getURL("dist/inject.js"),e.setAttribute("data-injected","true"),console.log("Injecting script"),(document.head||document.documentElement).appendChild(e)}}(),window.addEventListener("message",(t=>{t.data&&"GET_CLIPBOARD_CONTENTS"===t.data.type&&function(){e(this,void 0,void 0,(function*(){console.log("Attempting to read clipboard contents");try{const e=yield navigator.clipboard.read();for(const t of e)if(t.types.includes("image/png")){const e=yield t.getType("image/png"),n=new FileReader;return n.onloadend=()=>{console.log("Clipboard data read successfully"),window.postMessage({type:"CLIPBOARD_CONTENTS_RESPONSE",clipboardData:{fileDataUrl:n.result,mimeType:"image/png"}},"*")},void n.readAsDataURL(e)}window.postMessage({type:"CLIPBOARD_CONTENTS_RESPONSE",clipboardData:null},"*")}catch(e){console.error("Error reading clipboard:",e),window.postMessage({type:"CLIPBOARD_CONTENTS_RESPONSE",clipboardData:null},"*")}}))}()}),!1)}})[481]()})();